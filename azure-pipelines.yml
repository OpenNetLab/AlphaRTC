# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - "*"
    exclude:
    - upstream/*


jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - checkout: self
    lfs: true

  - script: make init
    displayName: 'build compile environment'

  - script: make sync
    displayName: 'sync dependencies'

  - script: make app
    displayName: 'build application'

  - script: make release
    displayName: 'build release image'

  - script: docker run -d --rm -v `pwd`/examples/peerconnection/serverless/corpus:/app -w /app --name alphartc alphartc peerconnection_serverless receiver.json
              && docker exec alphartc peerconnection_serverless sender.json
    displayName: 'run example'

- job: Windows
  pool:
    vmImage: VS2017-Win2016
  
  steps:

    - task: UsePythonVersion@0
      inputs:
        versionSpec: "2.x"
        addToPath: true
    
    - powershell: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
      workingDirectory: ${Pipeline.Workspace}
      displayName: "clone depot_tools"

    - checkout: self
      lfs: true
    
    - powershell: |
        $oldpath = (Get-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment' -Name PATH).path
        $newpath = "~\depot_tools;$oldpath" 
        Set-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment' -Name PATH -Value $newpath
    - script: |
        SET PATH=C:\depot_tools;%PATH%
    
    - powershell: gclient sync
      displayName: "sync dependencies"
    
    - powershell: gn gen out/Default
      displayName: "generate build rules"
    
    - powershell: ninja -C peerconnection_serverless
      displayName: "make peerconnection"
